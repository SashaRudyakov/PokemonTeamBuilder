/**
 * This class is generated by jOOQ
 */
package com.pokemon.db.tables;


import com.pokemon.db.Keys;
import com.pokemon.db.Public;
import com.pokemon.db.tables.records.PokemonRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Pokemon extends TableImpl<PokemonRecord> {

	private static final long serialVersionUID = -548306970;

	/**
	 * The reference instance of <code>public.pokemon</code>
	 */
	public static final Pokemon POKEMON = new Pokemon();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<PokemonRecord> getRecordType() {
		return PokemonRecord.class;
	}

	/**
	 * The column <code>public.pokemon.name</code>.
	 */
	public final TableField<PokemonRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>public.pokemon.pokedex_num</code>.
	 */
	public final TableField<PokemonRecord, Integer> POKEDEX_NUM = createField("pokedex_num", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>public.pokemon.evolves_to</code>.
	 */
	public final TableField<PokemonRecord, Integer> EVOLVES_TO = createField("evolves_to", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>public.pokemon.type1</code>.
	 */
	public final TableField<PokemonRecord, String> TYPE1 = createField("type1", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>public.pokemon.type2</code>.
	 */
	public final TableField<PokemonRecord, String> TYPE2 = createField("type2", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>public.pokemon.move1</code>.
	 */
	public final TableField<PokemonRecord, String> MOVE1 = createField("move1", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

	/**
	 * The column <code>public.pokemon.move2</code>.
	 */
	public final TableField<PokemonRecord, String> MOVE2 = createField("move2", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>public.pokemon.move3</code>.
	 */
	public final TableField<PokemonRecord, String> MOVE3 = createField("move3", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * The column <code>public.pokemon.move4</code>.
	 */
	public final TableField<PokemonRecord, String> MOVE4 = createField("move4", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

	/**
	 * Create a <code>public.pokemon</code> table reference
	 */
	public Pokemon() {
		this("pokemon", null);
	}

	/**
	 * Create an aliased <code>public.pokemon</code> table reference
	 */
	public Pokemon(String alias) {
		this(alias, POKEMON);
	}

	private Pokemon(String alias, Table<PokemonRecord> aliased) {
		this(alias, aliased, null);
	}

	private Pokemon(String alias, Table<PokemonRecord> aliased, Field<?>[] parameters) {
		super(alias, Public.PUBLIC, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<PokemonRecord> getPrimaryKey() {
		return Keys.POKEMON_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<PokemonRecord>> getKeys() {
		return Arrays.<UniqueKey<PokemonRecord>>asList(Keys.POKEMON_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<PokemonRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<PokemonRecord, ?>>asList(Keys.POKEMON__POKEMON_EVOLVES_TO_FKEY, Keys.POKEMON__POKEMON_TYPE1_FKEY, Keys.POKEMON__POKEMON_TYPE2_FKEY, Keys.POKEMON__POKEMON_MOVE1_FKEY, Keys.POKEMON__POKEMON_MOVE2_FKEY, Keys.POKEMON__POKEMON_MOVE3_FKEY, Keys.POKEMON__POKEMON_MOVE4_FKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Pokemon as(String alias) {
		return new Pokemon(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Pokemon rename(String name) {
		return new Pokemon(name, null);
	}
}
