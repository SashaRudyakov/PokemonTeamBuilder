/**
 * This class is generated by jOOQ
 */
package com.pokemon.db.tables.records;


import com.pokemon.db.enums.Gender;
import com.pokemon.db.tables.Trainer;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TrainerRecord extends UpdatableRecordImpl<TrainerRecord> implements Record5<String, Integer, Gender, Integer, String> {

	private static final long serialVersionUID = -608134742;

	/**
	 * Setter for <code>public.trainer.name</code>.
	 */
	public TrainerRecord setName(String value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.trainer.name</code>.
	 */
	public String getName() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>public.trainer.tid</code>.
	 */
	public TrainerRecord setTid(Integer value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.trainer.tid</code>.
	 */
	public Integer getTid() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>public.trainer.gender</code>.
	 */
	public TrainerRecord setGender(Gender value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.trainer.gender</code>.
	 */
	public Gender getGender() {
		return (Gender) getValue(2);
	}

	/**
	 * Setter for <code>public.trainer.age</code>.
	 */
	public TrainerRecord setAge(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.trainer.age</code>.
	 */
	public Integer getAge() {
		return (Integer) getValue(3);
	}

	/**
	 * Setter for <code>public.trainer.username</code>.
	 */
	public TrainerRecord setUsername(String value) {
		setValue(4, value);
		return this;
	}

	/**
	 * Getter for <code>public.trainer.username</code>.
	 */
	public String getUsername() {
		return (String) getValue(4);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record5 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, Gender, Integer, String> fieldsRow() {
		return (Row5) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row5<String, Integer, Gender, Integer, String> valuesRow() {
		return (Row5) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Trainer.TRAINER.NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Trainer.TRAINER.TID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Gender> field3() {
		return Trainer.TRAINER.GENDER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return Trainer.TRAINER.AGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Trainer.TRAINER.USERNAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getTid();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Gender value3() {
		return getGender();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAge();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getUsername();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord value1(String value) {
		setName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord value2(Integer value) {
		setTid(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord value3(Gender value) {
		setGender(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord value4(Integer value) {
		setAge(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord value5(String value) {
		setUsername(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TrainerRecord values(String value1, Integer value2, Gender value3, Integer value4, String value5) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TrainerRecord
	 */
	public TrainerRecord() {
		super(Trainer.TRAINER);
	}

	/**
	 * Create a detached, initialised TrainerRecord
	 */
	public TrainerRecord(String name, Integer tid, Gender gender, Integer age, String username) {
		super(Trainer.TRAINER);

		setValue(0, name);
		setValue(1, tid);
		setValue(2, gender);
		setValue(3, age);
		setValue(4, username);
	}
}
