/**
 * This class is generated by jOOQ
 */
package com.thirdchannel.db.tables.records;


import com.thirdchannel.db.tables.People2;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.7.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class People2Record extends UpdatableRecordImpl<People2Record> implements Record4<Integer, String, String, Integer> {

	private static final long serialVersionUID = 888864478;

	/**
	 * Setter for <code>public.people2.id</code>.
	 */
	public People2Record setId(Integer value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.people2.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>public.people2.first_name</code>.
	 */
	public People2Record setFirstName(String value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.people2.first_name</code>.
	 */
	public String getFirstName() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.people2.last_name</code>.
	 */
	public People2Record setLastName(String value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.people2.last_name</code>.
	 */
	public String getLastName() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>public.people2.age</code>.
	 */
	public People2Record setAge(Integer value) {
		setValue(3, value);
		return this;
	}

	/**
	 * Getter for <code>public.people2.age</code>.
	 */
	public Integer getAge() {
		return (Integer) getValue(3);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record4 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> fieldsRow() {
		return (Row4) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row4<Integer, String, String, Integer> valuesRow() {
		return (Row4) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return People2.PEOPLE2.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return People2.PEOPLE2.FIRST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return People2.PEOPLE2.LAST_NAME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field4() {
		return People2.PEOPLE2.AGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getFirstName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getLastName();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value4() {
		return getAge();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People2Record value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People2Record value2(String value) {
		setFirstName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People2Record value3(String value) {
		setLastName(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People2Record value4(Integer value) {
		setAge(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public People2Record values(Integer value1, String value2, String value3, Integer value4) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached People2Record
	 */
	public People2Record() {
		super(People2.PEOPLE2);
	}

	/**
	 * Create a detached, initialised People2Record
	 */
	public People2Record(Integer id, String firstName, String lastName, Integer age) {
		super(People2.PEOPLE2);

		setValue(0, id);
		setValue(1, firstName);
		setValue(2, lastName);
		setValue(3, age);
	}
}
